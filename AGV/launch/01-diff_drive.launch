<launch>

<arg name="model" default="$(find diff_drive)/urdf/simmm3.urdf.xacro"/>



<!-- Launch gazebo -->
<include file="$(find diff_drive)/launch/gazebo.launch">
  <arg name="model" value="$(arg model)"/>
  
  
  
  
 </include>



<!-- Load joint controller configuration from YAML file to parameter server -->

<rosparam file="$(find diff_drive)/config/robot_arm_control.yaml" command="load"/>

<rosparam file="$(find diff_drive)/config/diff_drive.yaml" command="load"/>


<!-- load the controllers -->
<node name="robot_arm_controller_spawner" pkg="controller_manager" type="spawner"
  respawn="true" output="screen" 
   args="/Diff_Drive/joint_state_controller
         /Diff_Drive/diff_drive_controller
         /Diff_Drive/Shoulder_pan_position_controller
         /Diff_Drive/Shoulder_roll_position_controller
         /Diff_Drive/joint_trajectory_controller_left_arm
         /Diff_Drive/joint_trajectory_controller_right_arm
         /cmd_vel
        --shutdown-timeout 3"/>

<!-- convert joint states to TF transforms for rviz, etc -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
</node>

<node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
  <param name="default_topic" value="/Diff_Drive/diff_drive_controller/cmd_vel"/> 

</node>


 <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
 
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />







</launch>

 


